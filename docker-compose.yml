
# services:
#   # Base de donnÃ©es PostgreSQL
#   db:
#     image: postgres:15
#     container_name: livraison_db
#     environment:
#       POSTGRES_USER: livraison_user
#       POSTGRES_PASSWORD: livraison_pass
#       POSTGRES_DB: livraison_db
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     ports:
#       - "5432:5432"
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U livraison_user -d livraison_db"]
#       interval: 10s
#       timeout: 5s
#       retries: 5

#   # API FastAPI
#   api:
#     build: .
#     env_file:
#       - .env
#     container_name: livraison_api
#     environment:
#       # DATABASE_URL: postgresql://livraison_user:livraison_pass@db:5432/livraison_db
#       DATABASE_URL: postgresql://livraison_user:livraison_pass@db:5432/livraison_db
#       SECRET_KEY: your-super-secret-key-change-this-in-production
#       ALGORITHM: HS256
#       ACCESS_TOKEN_EXPIRE_MINUTES: 30
#       BREVO_API_KEY: your-brevo-api-key-here
#     ports:
#       - "8000:8000"
#     depends_on:
#       db:
#         condition: service_healthy
#     volumes:
#       - ./app:/app/app
#       - ./alembic:/app/alembic
#     restart: unless-stopped

#   # Admin PostgreSQL (optionnel)
#   pgadmin:
#     image: dpage/pgadmin4:latest
#     container_name: livraison_pgadmin
#     environment:
#       PGADMIN_DEFAULT_EMAIL: admin@livraison.com
#       PGADMIN_DEFAULT_PASSWORD: admin123
#     ports:
#       - "5050:80"
#     depends_on:
#       - db
#     profiles:
#       - admin

# volumes:
#   postgres_data:



services:
  # Base de donnÃ©es PostgreSQL
  db:
    image: postgres:15
    container_name: livraison_db
    environment:
      POSTGRES_USER: livraison_user
      POSTGRES_PASSWORD: livraison_pass
      POSTGRES_DB: livraison_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5440:5432"   # ðŸ”¹ Port hÃ´te modifiÃ© pour Ã©viter conflit
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U livraison_user -d livraison_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - traefik

  # API FastAPI
  api:
    build: .
    container_name: livraison_api
    env_file:
      - .env
    environment:
      # ðŸ”¹ On garde 5432 pour la communication interne docker (db:5432)
      DATABASE_URL: postgresql://livraison_user:livraison_pass@109.199.96.209:5440/livraison_db
      SECRET_KEY: your-super-secret-key-change-this-in-production
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      BREVO_API_KEY: your-brevo-api-key-here
    ports:
      - "8040:8040"   # ðŸ”¹ Port hÃ´te modifiÃ© pour Ã©viter conflit
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./app:/app/app
      - ./alembic:/app/alembic
    restart: unless-stopped
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      # ðŸ”¹ Router & service uniques
      - "traefik.http.routers.riganova_backend-api.rule=Host(`back-riganova.taxis-forfait.com`)"
      - "traefik.http.routers.riganova_backend-api.entrypoints=websecure"
      - "traefik.http.routers.riganova_backend-api.tls.certresolver=letsencrypt"
      - "traefik.http.services.riganova_backend-api.loadbalancer.server.port=8040"
      # ðŸ”¹ Redirection HTTP â†’ HTTPS
      - "traefik.http.routers.riganova_backend-api-http.rule=Host(`back-riganova.taxis-forfait.com`)"
      - "traefik.http.routers.riganova_backend-api-http.entrypoints=web"
      - "traefik.http.routers.riganova_backend-api-http.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

  # Admin PostgreSQL (optionnel)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: livraison_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@livraison.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5052:80"    # ðŸ”¹ Port modifiÃ© (5050 est dÃ©jÃ  utilisÃ© ailleurs)
    depends_on:
      - db
    networks:
      - traefik
    profiles:
      - admin

volumes:
  postgres_data:

networks:
  traefik:
    external: true
